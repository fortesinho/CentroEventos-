@page "/eventos/alta"
@rendermode InteractiveServer
@using CentroEventos.Aplicacion.CasosDeUso
@using CentroEventos.Aplicacion.Entidades
@inject EventoDeportivoAltaUseCase useCase
@inject NavigationManager nav

<h3>Agregar Evento Deportivo</h3>

@if (!string.IsNullOrWhiteSpace(error))
{
    <div class="alert alert-danger">@error</div>
}

<EditForm OnValidSubmit="Guardar" Model="@evento">
    <label>Nombre</label>
    <InputText @bind-Value="evento.Nombre" placeholder="Nombre del evento" class="form-control mb-2" />

    <label>Descripción</label>
    <InputText @bind-Value="evento.Descripcion" placeholder="Descripción breve" class="form-control mb-2" />

    <label>Fecha</label>
    <InputDate @bind-Value="fecha" class="form-control mb-2" />

    <label>Hora</label>
    <input type="time" class="form-control mb-2" value="@horaString" @onchange="OnHoraChanged" />

    <label>Duración (horas)</label>
    <InputNumber @bind-Value="evento.DuracionHoras" placeholder="Ej: 1.5" class="form-control mb-2" />

    <label>Cupo Máximo</label>
    <InputNumber @bind-Value="evento.CupoMaximo" placeholder="Cantidad máxima de asistentes" class="form-control mb-2" />

    <label>ID del Responsable</label>
    <InputNumber @bind-Value="evento.ResponsableId" placeholder="ID de la persona responsable" class="form-control mb-2" />

    <button type="submit" class="btn btn-success">Guardar</button>
    <button type="button" class="btn btn-secondary ms-2" @onclick="Cancelar">Cancelar</button>
</EditForm>

<button @onclick="IrMenu" class="btn btn-link mt-3">Volver al menú</button>

@code {
    EventoDeportivo evento = new EventoDeportivo();
    DateTime fecha = DateTime.Today;
    string horaString = "12:00";
    string error = "";

    void OnHoraChanged(ChangeEventArgs e)
    {
        horaString = e.Value?.ToString() ?? "12:00";
    }

    void Guardar()
    {
        try
        {
            var partes = horaString.Split(':');
            int horas = int.Parse(partes[0]);
            int minutos = int.Parse(partes[1]);

            evento.FechaHoraInicio = fecha.Date.AddHours(horas).AddMinutes(minutos);

            useCase.Ejecutar(evento);
            nav.NavigateTo("/eventos");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    void Cancelar()
    {
        nav.NavigateTo("/eventos");
    }

    void IrMenu()
    {
        nav.NavigateTo("/menu");
    }
}