@page "/registro"
@rendermode InteractiveServer   
@using CentroEventos.Aplicacion.CasosDeUso.UsuarioCasosDeUso
@using CentroEventos.Aplicacion.Entidades
@using CentroEventos.Aplicacion.Servicios
@using CentroEventos.Aplicacion.Excepciones
@inject UsuarioAltaUseCase useCase
@inject NavigationManager nav   

<h3>Registro</h3>
@if (!string.IsNullOrWhiteSpace(error))
{
    <div class="alert alert-danger" role="alert">
        @error
    </div>
}

<input @bind="nombre" placeholder="Nombre" class="form-control" />
<input @bind="apellido" placeholder="Apellido" class="form-control" />
<input @bind="email" placeholder="Email" class="form-control" />
<input @bind="contrase単a" placeholder="Contrase単a" type="password" class="form-control" />

<button class="btn btn-success mt-2" @onclick="Registrarse">Registrarse</button>

@code {
    string nombre = "", apellido = "", email = "", contrase単a = "", error = "";

    void Registrarse()
    {
        error = "";
        try
        {
            var usuario = new Usuario
            {
                Nombre = nombre,
                Apellido = apellido,
                Email = email
            };

            useCase.Ejecutar(usuario, contrase単a);
            nav.NavigateTo("/login");
        }
        catch (ValidacionException ex)
        {
            error = ex.Message;
        }
    }
}